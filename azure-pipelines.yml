# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
stages:
- stage: 
  pool:
    vmImage: windows-latest
  jobs:
  - job: backend_build
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: 
    - task: DotNetCoreCLI@2
      displayName: dotnet restore
      inputs:
        command: 'restore'
        projects: 'WebAPI/WebAPI.sln'
        feedsToUse: 'select'
    - task: DotNetCoreCLI@2
      displayName: dotnet build
      inputs:
        command: 'build'
        projects: 'WebAPI/WebAPI.sln'
        configuration: Release
    - task: PublishBuildArtifacts@1
      displayName: publish backend artifact
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\WebAPI\WebAPI\bin\Debug\netcoreapp2.2'
        ArtifactName: 'backend'
        publishLocation: 'Container'
    - task: DownloadBuildArtifacts@1
      displayName: download backend artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'backend'
        downloadPath: '$(System.ArtifactsDirectory)'

- stage: 
  pool:
    vmImage: Ubuntu-latest
  jobs:
  - job: frontend_build
    steps:
    - task: NodeTool@0
      displayName: node install
      inputs:
        versionSource: 'spec'
        versionSpec: '7.0.1'
    - task: Npm@1
      displayName: npm install
      inputs:
        command: 'install'
        workingDir: 'Asp.Net-Core-Web-API-and-Angular-7-CRUD\Angular7'
    - task: Npm@1
      displayName: npm run and build
      inputs:
        command: 'custom'
        workingDir: 'Asp.Net-Core-Web-API-and-Angular-7-CRUD\Angular7'
        customCommand: 'run build'

    - task: PublishBuildArtifacts@1
      displayName: publish frontend artifact
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory\dist\Angular7'
        ArtifactName: 'frontend'
        publishLocation: 'Container'